Ну, итак, по результатам запуска основной части программы можно сделать вывод, что наиболее медленно выполняется "наивный" алгоритм. Неясно, как происходит выполнение API (я имею в виду сложность внутренних процессов в API), но в худшем случае API выполнится трижды, если в идентификатор попадает город, принадлежащий области.

Второй алгоритм "перебора дерева" выполняется быстрее, и можно предположить, что получение всех адресов занимает меньше времени, чем получение простого узла адреса. Однако сложность алгоритма выше. В худшем случае - O(n^3).

Третий алгоритм с мемоизацией работает быстрее всех. Поскольку сначала происходит инициализация (но ведь измерялось конкретное декодирование идентификатора в адрес), а затем поиск адреса по идентификатору происходит за константное время.

Что касается использования памяти, предположительно, эффективность будет обратной - 1, 2, 3. В первом случае ничего не сохраняется. Во втором случае сохраняется дерево адресов. В третьем случае происходит распаковка и сохранение дерева в словаре.
